name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test-linux-gcc:
    runs-on: ubuntu-22.04
    steps:
      - name: Cache the Git repository folder
        uses: actions/cache@v4
        with:
          path: ./.git
          key: git-folder

      - name: Checkout Gadgets (recursively)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Configure Gadgets
        run: |
          mkdir build-gcc && cd build-gcc
          cmake -DGADGETS_WITH_COVERAGE=ON ..

      - name: Build Gadgets
        run: |
          tools/build.sh

      - name: Run Tests
        run: |
          sudo apt-get -y install lcov
          tools/coverage.sh

      - name: Generate "shields.io" Badge Files
        run: |
          COVERAGE_LINES=`lcov --summary ./gadgets_filtered.lcov.info | grep "lines" | sed -r 's/.* ([0-9]*\.?[0-9]?)\%.*/\1/'`
          COVERAGE_FUNCS=`lcov --summary ./gadgets_filtered.lcov.info | grep "functions" | sed -r 's/.* ([0-9]*\.?[0-9]?)\%.*/\1/'`
          echo "Line coverage: $COVERAGE_LINES percent"
          echo "Function coverage: $COVERAGE_FUNCS percent"
          BADGES_ROOT=".pages/badges/`git rev-parse --abbrev-ref HEAD`"
          mkdir -p $BADGE_ROOT
          echo "{\"label\":\"Coverage\",\"message\":\"$COVERAGE%\",\"schemaVersion\":1,\"color\":\"hsl(99, 100%, 40%)\"}" > $BADGE_ROOT/line_coverage.json
          cat $BADGE_ROOT/line_coverage.json

      - #name: Create the Badge
        #uses: schneegans/dynamic-badges-action@v1.7.0
        #with:
        #  auth: ${{ secrets.GIST_SECRET }}
        #  gistID: 19481c67ff9d085f620f99aa697e7d5c
        #  filename: gadgets-coverage-badge-master.json
        #  label: Coverage
        #  message: ${{ env.COVERAGE_LINES }}%
        #  valColorRange: ${{ env.COVERAGE_LINES }}
        #  maxColorRange: 100
        #  minColorRange: 0

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: github-pages
          publish_dir: ./.pages

  build-and-test-linux-clang:
    runs-on: ubuntu-22.04
    steps:
      - name: Cache the Git repository folder
        uses: actions/cache@v4
        with:
          path: ./.git
          key: git-folder

      # newer version of clang is required due to issues with included version in the
      # image - install v17.0.x and use clang-17/clang++-17 during project configuration
      - name: Install newer Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          sudo ./llvm.sh 17

      - name: Checkout Gadgets (recursively)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Configure Gadgets
        run: |
          mkdir build-clang && cd build-clang
          cmake -DCMAKE_C_COMPILER=clang-17 -DCMAKE_CXX_COMPILER=clang++-17 ..

      - name: Build Gadgets
        run: |
          cd build-clang
          make -j`nproc`

      - name: Run Tests
        run: |
          cd build-clang/src/Tests
          ./GadgetsTestRunner
